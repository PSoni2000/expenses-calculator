{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","filterOptions","map","filterYears","index","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","Set","exp","selectedYear","App","loadExpenses","JSON","parse","localStorage","getItem","setExpenses","prevExpenses","setItem","stringify","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1a4124a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\tconst [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\tconst [enteredDate, setEnteredDate] = useState(\"\");\r\n\t// const [userInput, setUserInput] = useState({\r\n\t//   enteredTitle: '',\r\n\t//   enteredAmount: '',\r\n\t//   enteredDate: '',\r\n\t// });\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t//   ...userInput,\r\n\t\t//   enteredTitle: event.target.value,\r\n\t\t// });\r\n\t\t// setUserInput((prevState) => {\r\n\t\t//   return { ...prevState, enteredTitle: event.target.value };\r\n\t\t// });\r\n\t};\r\n\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t//   ...userInput,\r\n\t\t//   enteredAmount: event.target.value,\r\n\t\t// });\r\n\t};\r\n\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t//   ...userInput,\r\n\t\t//   enteredDate: event.target.value,\r\n\t\t// });\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\tsetEnteredTitle(\"\");\r\n\t\tsetEnteredAmount(\"\");\r\n\t\tsetEnteredDate(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={titleChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"2019-01-01\"\r\n\t\t\t\t\t\tmax=\"2022-12-31\"\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst dropdownChangeHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\r\n\t\t\t\t\t{props.filterOptions.map((filterYears, index) => (\r\n\t\t\t\t\t\t<option key={index} value={filterYears}>\r\n\t\t\t\t\t\t\t{filterYears}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n\tconst [filteredYear, setFilteredYear] = useState(\r\n\t\tnew Date().getFullYear().toString()\r\n\t);\r\n\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\t// filter expenses according to selected year\r\n\tconst filteredExpenses = props.items.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\tconst filterOptions = [\r\n\t\t...new Set([\r\n\t\t\tnew Date().getFullYear().toString(),\r\n\t\t\t...props.items.map((exp) => exp.date.getFullYear().toString()),\r\n\t\t]),\r\n\t];\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselected={filteredYear}\r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\nconst App = () => {\r\n\tconst loadExpenses =\r\n\t\tJSON.parse(localStorage.getItem(\"React_Expenses_Calculator_app\")) ?? [];\r\n\tconst [expenses, setExpenses] = useState(\r\n\t\tloadExpenses.map((exp) => ({ ...exp, date: new Date(exp.date) }))\r\n\t);\r\n\r\n\tconst addExpenseHandler = (expense) => {\r\n\t\tsetExpenses((prevExpenses) => {\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\"React_Expenses_Calculator_app\",\r\n\t\t\t\tJSON.stringify([expense, ...prevExpenses])\r\n\t\t\t);\r\n\r\n\t\t\treturn [expense, ...prevExpenses];\r\n\t\t});\r\n\t};\r\n\r\n\t// return React.createElement(\r\n\t//   'div',\r\n\t//   {},\r\n\t//   React.createElement('h2', {}, \"Let's get started!\"),\r\n\t//   React.createElement(Expenses, { items: expenses })\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\r\n\t\t\t<Expenses items={expenses} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}